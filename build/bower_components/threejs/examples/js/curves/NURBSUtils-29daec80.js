THREE.NURBSUtils={findSpan:function(r,a,i){var n=i.length-r-1;if(a>=i[n])return n-1;if(a<=i[r])return r;for(var c=r,o=n,t=Math.floor((c+o)/2);a<i[t]||a>=i[t+1];)a<i[t]?o=t:c=t,t=Math.floor((c+o)/2);return t},calcBasisFunctions:function(r,a,i,n){var c=[],o=[],t=[];c[0]=1;for(var e=1;i>=e;++e){o[e]=a-n[r+1-e],t[e]=n[r+e]-a;for(var v=0,l=0;e>l;++l){var f=t[l+1],s=o[e-l],u=c[l]/(f+s);c[l]=v+f*u,v=s*u}c[e]=v}return c},calcBSplinePoint:function(r,a,i,n){for(var c=this.findSpan(r,n,a),o=this.calcBasisFunctions(c,n,r,a),t=new THREE.Vector4(0,0,0,0),e=0;r>=e;++e){var v=i[c-r+e],l=o[e],f=v.w*l;t.x+=v.x*f,t.y+=v.y*f,t.z+=v.z*f,t.w+=v.w*l}return t},calcBasisFunctionDerivatives:function(r,a,i,n,c){for(var o=[],t=0;i>=t;++t)o[t]=0;for(var e=[],t=0;n>=t;++t)e[t]=o.slice(0);for(var v=[],t=0;i>=t;++t)v[t]=o.slice(0);v[0][0]=1;for(var l=o.slice(0),f=o.slice(0),s=1;i>=s;++s){l[s]=a-c[r+1-s],f[s]=c[r+s]-a;for(var u=0,S=0;s>S;++S){var h=f[S+1],d=l[s-S];v[s][S]=h+d;var E=v[S][s-1]/v[s][S];v[S][s]=u+h*E,u=d*E}v[s][s]=u}for(var s=0;i>=s;++s)e[0][s]=v[s][i];for(var S=0;i>=S;++S){for(var p=0,w=1,y=[],t=0;i>=t;++t)y[t]=o.slice(0);y[0][0]=1;for(var B=1;n>=B;++B){var R=0,D=S-B,H=i-B;S>=B&&(y[w][0]=y[p][0]/v[H+1][D],R=y[w][0]*v[D][H]);for(var T=D>=-1?1:-D,x=H>=S-1?B-1:i-S,s=T;x>=s;++s)y[w][s]=(y[p][s]-y[p][s-1])/v[H+1][D+s],R+=y[w][s]*v[D+s][H];H>=S&&(y[w][B]=-y[p][B-1]/v[H+1][S],R+=y[w][B]*v[S][H]),e[B][S]=R;var s=p;p=w,w=s}}for(var S=i,B=1;n>=B;++B){for(var s=0;i>=s;++s)e[B][s]*=S;S*=i-B}return e},calcBSplineDerivatives:function(r,a,i,n,c){for(var o=r>c?c:r,t=[],e=this.findSpan(r,n,a),v=this.calcBasisFunctionDerivatives(e,n,r,o,a),l=[],f=0;f<i.length;++f){var s=i[f].clone(),u=s.w;s.x*=u,s.y*=u,s.z*=u,l[f]=s}for(var S=0;o>=S;++S){for(var s=l[e-r].clone().multiplyScalar(v[S][0]),h=1;r>=h;++h)s.add(l[e-r+h].clone().multiplyScalar(v[S][h]));t[S]=s}for(var S=o+1;c+1>=S;++S)t[S]=new THREE.Vector4(0,0,0);return t},calcKoverI:function(r,a){for(var i=1,n=2;r>=n;++n)i*=n;for(var c=1,n=2;a>=n;++n)c*=n;for(var n=2;r-a>=n;++n)c*=n;return i/c},calcRationalCurveDerivatives:function(r){for(var a=r.length,i=[],n=[],c=0;a>c;++c){var o=r[c];i[c]=new THREE.Vector3(o.x,o.y,o.z),n[c]=o.w}for(var t=[],e=0;a>e;++e){for(var v=i[e].clone(),c=1;e>=c;++c)v.sub(t[e-c].clone().multiplyScalar(this.calcKoverI(e,c)*n[c]));t[e]=v.divideScalar(n[0])}return t},calcNURBSDerivatives:function(r,a,i,n,c){var o=this.calcBSplineDerivatives(r,a,i,n,c);return this.calcRationalCurveDerivatives(o)},calcSurfacePoint:function(r,a,i,n,c,o,t){for(var e=this.findSpan(r,o,i),v=this.findSpan(a,t,n),l=this.calcBasisFunctions(e,o,r,i),f=this.calcBasisFunctions(v,t,a,n),s=[],u=0;a>=u;++u){s[u]=new THREE.Vector4(0,0,0,0);for(var S=0;r>=S;++S){var h=c[e-r+S][v-a+u].clone(),d=h.w;h.x*=d,h.y*=d,h.z*=d,s[u].add(h.multiplyScalar(l[S]))}}for(var E=new THREE.Vector4(0,0,0,0),u=0;a>=u;++u)E.add(s[u].multiplyScalar(f[u]));return E.divideScalar(E.w),new THREE.Vector3(E.x,E.y,E.z)}};