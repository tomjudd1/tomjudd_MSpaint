THREE.GlitchPass=function(t){void 0===THREE.DigitalGlitch&&console.error("THREE.GlitchPass relies on THREE.DigitalGlitch");var e=THREE.DigitalGlitch;this.uniforms=THREE.UniformsUtils.clone(e.uniforms),void 0==t&&(t=64),this.uniforms.tDisp.value=this.generateHeightmap(t),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader}),console.log(this.material),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad),this.goWild=!1,this.curF=0,this.generateTrigger()},THREE.GlitchPass.prototype={render:function(t,e,a){this.uniforms.tDiffuse.value=a,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this.curF%this.randX==0||1==this.goWild?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=THREE.Math.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=THREE.Math.randFloat(-1,1),this.uniforms.seed_y.value=THREE.Math.randFloat(-1,1),this.uniforms.distortion_x.value=THREE.Math.randFloat(0,1),this.uniforms.distortion_y.value=THREE.Math.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=THREE.Math.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=THREE.Math.randFloat(0,1),this.uniforms.distortion_y.value=THREE.Math.randFloat(0,1),this.uniforms.seed_x.value=THREE.Math.randFloat(-.3,.3),this.uniforms.seed_y.value=THREE.Math.randFloat(-.3,.3)):0==this.goWild&&(this.uniforms.byp.value=1),this.curF++,this.quad.material=this.material,this.renderToScreen?t.render(this.scene,this.camera):t.render(this.scene,this.camera,e,!1)},generateTrigger:function(){this.randX=THREE.Math.randInt(120,240)},generateHeightmap:function(t){var e=new Float32Array(t*t*3);console.log(t);for(var a=t*t,i=0;a>i;i++){var r=THREE.Math.randFloat(0,1);e[3*i+0]=r,e[3*i+1]=r,e[3*i+2]=r}var s=new THREE.DataTexture(e,t,t,THREE.RGBFormat,THREE.FloatType);return console.log(s),console.log(t),s.minFilter=THREE.NearestFilter,s.magFilter=THREE.NearestFilter,s.needsUpdate=!0,s.flipY=!1,s}};