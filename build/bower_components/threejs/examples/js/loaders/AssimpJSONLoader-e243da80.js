THREE.AssimpJSONLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.AssimpJSONLoader.prototype={constructor:THREE.AssimpJSONLoader,texturePath:"",load:function(e,r,t,a,n){var s=this;this.texturePath=n&&"string"==typeof n?n:this.extractUrlBase(e);var o=new THREE.XHRLoader(this.manager);o.setCrossOrigin(this.crossOrigin),o.load(e,function(e){var t,n,o=JSON.parse(e);if(n=o.__metadata__,"undefined"!=typeof n){if("assimp2json"!==n.format)return void a("Not an assimp2json scene");if(n.version<100&&n.version>=200)return void a("Unsupported assimp2json file format version")}t=s.parse(o),r(t)},t,a)},setCrossOrigin:function(e){this.crossOrigin=e},extractUrlBase:function(e){var r=e.split("/");return r.pop(),(r.length<1?".":r.join("/"))+"/"},parse:function(e){var r=this.parseList(e.meshes,this.parseMesh),t=this.parseList(e.materials,this.parseMaterial);return this.parseObject(e,e.rootnode,r,t)},parseList:function(e,r){for(var t=new Array(e.length),a=0;a<e.length;++a)t[a]=r.call(this,e[a]);return t},parseMesh:function(e){function r(e,r,t){var a,n,s,o,i,c;for(a=0,n=r.length;n>a;++a)s=r[a],o=2*s.a,i=2*s.b,c=2*s.c,t.push([new THREE.Vector2(e[o],e[o+1]),new THREE.Vector2(e[i],e[i+1]),new THREE.Vector2(e[c],e[c+1])])}function t(e,r){var t,a,n,s,o,i;for(t=0,a=r.length;a>t;++t)n=r[t],s=3*n.a,o=3*n.b,i=3*n.c,n.vertexNormals=[new THREE.Vector3(e[s],e[s+1],e[s+2]),new THREE.Vector3(e[o],e[o+1],e[o+2]),new THREE.Vector3(e[i],e[i+1],e[i+2])]}function a(e,r){function t(){var e=new THREE.Color;return e.setRGB(arr[0],arr[1],arr[2]),e}var a,n,s,o,i,c;for(a=0,n=r.length;n>a;++a)s=r[a],o=4*s.a,i=4*s.b,c=4*s.c,s.vertexColors=[t(o),t(i),t(c)]}var n,s,o,i,c;for(n=new THREE.Geometry,i=e.vertices,s=0,o=i.length;o>s;)n.vertices.push(new THREE.Vector3(i[s++],i[s++],i[s++]));for(i=e.faces,s=0,o=i.length;o>s;++s)face=new THREE.Face3,c=i[s],face.a=c[0],face.b=c[1],face.c=c[2],face.materialIndex=0,n.faces.push(face);for(e.texturecoords=e.texturecoords||[],s=0,o=e.texturecoords.length;o>s;++s)r(e.texturecoords[s],n.faces,n.faceVertexUvs[s]);return e.normals&&t(e.normals,n.faces),e.colors&&e.colors[0]&&a(e.colors[0],n.faces),n.computeBoundingSphere(),n},parseMaterial:function(e){function r(e){var r=new THREE.Color;return r.setRGB(e[0],e[1],e[2]),r}function t(){var e=new Image;return e.width=1,e.height=1,new THREE.Texture(e)}var a,n,s=null,o=this,i=[],c={shading:THREE.SmoothShading};for(var a in e.properties)n=e.properties[a],"$tex.file"===n.key?(1===n.semantic||5===n.semantic||6===n.semantic||2===n.semantic)&&!function(e){var r,t=new THREE.TextureLoader(o.manager);1===e?r="map":5===e?r="bumpMap":6===e?r="normalMap":2===e&&(r="specularMap"),i.push(r),t.setCrossOrigin(this.crossOrigin);var a=o.texturePath+"/"+n.value;a=a.replace(/\\/g,"/"),t.load(a,function(e){e&&(e.wrapS=e.wrapT=THREE.RepeatWrapping,s[r]=e,s.needsUpdate=!0)})}(n.semantic):"?mat.name"===n.key?c.name=n.value:"$clr.diffuse"===n.key?c.color=r(n.value):"$clr.specular"===n.key?c.specular=r(n.value):"$clr.emissive"===n.key?c.emissive=r(n.value):"$mat.shadingm"===n.key?1===n.value&&(c.shading=THREE.FlatShading):"$mat.shininess"===n.key&&(c.shininess=n.value);if(i.length)for(a=i.length-1;a>=0;--a)c[i[a]]=t();return s=new THREE.MeshPhongMaterial(c)},parseObject:function(e,r,t,a){var n,s,o=new THREE.Object3D;for(o.name=r.name||"",o.matrix=(new THREE.Matrix4).fromArray(r.transformation).transpose(),o.matrix.decompose(o.position,o.quaternion,o.scale),n=0;r.meshes&&n<r.meshes.length;++n)s=r.meshes[n],o.add(new THREE.Mesh(t[s],a[e.meshes[s].materialindex]));for(n=0;r.children&&n<r.children.length;++n)o.add(this.parseObject(e,r.children[n],t,a));return o}};