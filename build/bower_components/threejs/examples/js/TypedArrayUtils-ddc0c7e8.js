THREE.TypedArrayUtils={},THREE.TypedArrayUtils.quicksortIP=function(t,n,e){for(var o,r,i=[],s=-1,h=0,u=t.length/n-1,c=0,l=0,f=0,a=function(e,o){for(e*=n,o*=n,f=0;n>f;f++)c=t[e+f],t[e+f]=t[o+f],t[o+f]=c},p=new Float32Array(n),d=new Float32Array(n);;)if(25>=u-h){for(r=h+1;u>=r;r++){for(l=0;n>l;l++)p[l]=t[r*n+l];for(o=r-1;o>=h&&t[o*n+e]>p[e];){for(l=0;n>l;l++)t[(o+1)*n+l]=t[o*n+l];o--}for(l=0;n>l;l++)t[(o+1)*n+l]=p[l]}if(-1==s)break;u=i[s--],h=i[s--]}else{var y=h+u>>1;for(o=h+1,r=u,a(y,o),t[h*n+e]>t[u*n+e]&&a(h,u),t[o*n+e]>t[u*n+e]&&a(o,u),t[h*n+e]>t[o*n+e]&&a(h,o),l=0;n>l;l++)d[l]=t[o*n+l];for(;;){do o++;while(t[o*n+e]<d[e]);do r--;while(t[r*n+e]>d[e]);if(o>r)break;a(o,r)}for(l=0;n>l;l++)t[(h+1)*n+l]=t[r*n+l],t[r*n+l]=d[l];u-o+1>=r-h?(i[++s]=o,i[++s]=u,u=r-1):(i[++s]=h,i[++s]=r-1,h=o)}return t},THREE.TypedArrayUtils.Kdtree=function(t,n,e){function o(t,n,h,u){var c,l,f=n%e,a=t.length/e;return n>i&&(i=n),0===a?null:1===a?new r.Node(s(t,0),n,h,u):(THREE.TypedArrayUtils.quicksortIP(t,e,f),c=Math.floor(a/2),l=new r.Node(s(t,c),n,h,c+u),l.left=o(t.subarray(0,c*e),n+1,l,u),l.right=o(t.subarray((c+1)*e,t.length),n+1,l,u+c+1),l)}var r=this,i=0,s=function(t,n){return t.subarray(n*e,n*e+e)};this.root=o(t,0,null,0),this.getMaxDepth=function(){return i},this.nearest=function(t,o,i){function s(r){function i(t,n){c.push([t,n]),c.size()>o&&c.pop()}var h,u,l,f=r.depth%e,a=n(t,r.obj),p=0,d=[];for(l=0;e>l;l+=1)d[l]=l===r.depth%e?t[l]:r.obj[l];return p=n(d,r.obj),null===r.right&&null===r.left?void((c.size()<o||a<c.peek()[1])&&i(r,a)):(h=null===r.right?r.left:null===r.left?r.right:t[f]<r.obj[f]?r.left:r.right,s(h),(c.size()<o||a<c.peek()[1])&&i(r,a),void((c.size()<o||Math.abs(p)<c.peek()[1])&&(u=h===r.left?r.right:r.left,null!==u&&s(u))))}var h,u,c;if(c=new THREE.TypedArrayUtils.Kdtree.BinaryHeap(function(t){return-t[1]}),i)for(h=0;o>h;h+=1)c.push([null,i]);for(s(r.root),u=[],h=0;o>h;h+=1)c.content[h][0]&&u.push([c.content[h][0],c.content[h][1]]);return u}},THREE.TypedArrayUtils.Kdtree.prototype.Node=function(t,n,e,o){this.obj=t,this.left=null,this.right=null,this.parent=e,this.depth=n,this.pos=o},THREE.TypedArrayUtils.Kdtree.BinaryHeap=function(t){this.content=[],this.scoreFunction=t},THREE.TypedArrayUtils.Kdtree.BinaryHeap.prototype={push:function(t){this.content.push(t),this.bubbleUp(this.content.length-1)},pop:function(){var t=this.content[0],n=this.content.pop();return this.content.length>0&&(this.content[0]=n,this.sinkDown(0)),t},peek:function(){return this.content[0]},remove:function(t){for(var n=this.content.length,e=0;n>e;e++)if(this.content[e]==t){var o=this.content.pop();return void(e!=n-1&&(this.content[e]=o,this.scoreFunction(o)<this.scoreFunction(t)?this.bubbleUp(e):this.sinkDown(e)))}throw new Error("Node not found.")},size:function(){return this.content.length},bubbleUp:function(t){for(var n=this.content[t];t>0;){var e=Math.floor((t+1)/2)-1,o=this.content[e];if(!(this.scoreFunction(n)<this.scoreFunction(o)))break;this.content[e]=n,this.content[t]=o,t=e}},sinkDown:function(t){for(var n=this.content.length,e=this.content[t],o=this.scoreFunction(e);;){var r=2*(t+1),i=r-1,s=null;if(n>i){var h=this.content[i],u=this.scoreFunction(h);o>u&&(s=i)}if(n>r){var c=this.content[r],l=this.scoreFunction(c);(null===s?o:u)>l&&(s=r)}if(null===s)break;this.content[t]=this.content[s],this.content[s]=e,t=s}}};