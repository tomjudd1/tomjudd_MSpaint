THREE.RaytracingRenderer=function(t){console.log("THREE.RaytracingRenderer",THREE.REVISION),t=t||{};var r,e,a,o,i,n,l=this,c=document.createElement("canvas"),s=c.getContext("2d",{alpha:t.alpha===!0}),E=3,h=new THREE.Color(0),m=new THREE.Vector3,d=new THREE.Vector3,p=new THREE.Vector3,R=new THREE.Raycaster(m,d),u=new THREE.Raycaster,v=new THREE.Matrix4,y=new THREE.Matrix3,M=[],T={},f=null;this.domElement=c,this.autoClear=!0,this.setClearColor=function(t){h.set(t)},this.setPixelRatio=function(){},this.setSize=function(t,i){c.width=t,c.height=i,r=c.width,e=c.height,a=Math.floor(r/2),o=Math.floor(e/2),s.fillStyle="white"},this.setSize(c.width,c.height),this.clear=function(){};var H=function(){for(var t=new THREE.Color,r=new THREE.Color,e=new THREE.Color,a=new THREE.Color,o=new THREE.Color,i=new THREE.Vector3,l=new THREE.Vector3,c=new THREE.Vector3,s=new THREE.Vector3,h=new THREE.Vector3,m=new THREE.Vector3,d=new THREE.Vector3,p=[],v=0;E>v;v++)p[v]=new THREE.Color;return function(v,y,f,x){var w=R.ray;w.origin=v,w.direction=y;var V=u.ray;f.setRGB(0,0,0);var b=R.intersectObjects(n,!0);if(0!==b.length){var C=b[0],S=C.point,W=C.object,z=W.material,I=C.face,F=W.geometry.vertices,P=T[W.id];if(h.copy(S).applyMatrix4(P.inverseMatrix),i.subVectors(R.ray.origin,S).normalize(),z instanceof THREE.MeshLambertMaterial||z instanceof THREE.MeshPhongMaterial||z instanceof THREE.MeshBasicMaterial?t.copyGammaToLinear(z.color):t.setRGB(1,1,1),z.vertexColors===THREE.FaceColors&&t.multiply(I.color),V.origin.copy(S),z instanceof THREE.MeshBasicMaterial)for(var L=0,q=M.length;q>L;L++){var G=M[L];l.setFromMatrixPosition(G.matrixWorld),l.sub(S),V.direction.copy(l).normalize();var b=u.intersectObjects(n,!0);b.length>0||f.add(t)}else if(z instanceof THREE.MeshLambertMaterial||z instanceof THREE.MeshPhongMaterial)for(var j=!1,L=0,q=M.length;q>L;L++){var G=M[L];e.copyGammaToLinear(G.color),l.setFromMatrixPosition(G.matrixWorld),l.sub(S),V.direction.copy(l).normalize();var b=u.intersectObjects(n,!0);if(!(b.length>0)){j===!1&&(g(c,h,z.shading,I,F),c.applyMatrix3(P.normalMatrix).normalize(),j=!0);var B=1;G.physicalAttenuation===!0&&(B=l.length(),B=1/(B*B)),l.normalize();var N=Math.max(c.dot(l),0),O=N*G.intensity;if(o.copy(t),o.multiply(e),o.multiplyScalar(O*B),f.add(o),z instanceof THREE.MeshPhongMaterial){s.addVectors(l,i).normalize();var A=Math.max(c.dot(s),0),D=Math.max(Math.pow(A,z.shininess),0)*O,U=(z.shininess+2)/8;r.copyGammaToLinear(z.specular);var k=Math.pow(Math.max(1-l.dot(s),0),5);a.r=r.r+(1-r.r)*k,a.g=r.g+(1-r.g)*k,a.b=r.b+(1-r.b)*k,o.copy(a),o.multiply(e),o.multiplyScalar(U*D*B),f.add(o)}}}var J=z.reflectivity;if((z.mirror||z.glass)&&J>0&&E>x){if(z.mirror)m.copy(y),m.reflect(c);else if(z.glass){var K=z.refractionRatio,Q=y.dot(c),X=1-K*K*(1-Q*Q);if(0>X)m.set(0,0,0);else{m.copy(y),m.multiplyScalar(K);var k=K*Q+Math.sqrt(X);d.copy(c),d.multiplyScalar(k),m.sub(d)}}var Y=Math.max(i.dot(c),0),Z=J,$=Z+(1-Z)*Math.pow(1-Y,5),_=$,tr=p[x];H(S,m,tr,x+1),void 0!==z.specular&&tr.multiply(z.specular),tr.multiplyScalar(_),f.multiplyScalar(1-_),f.add(tr)}}}}(),g=function(){var t=new THREE.Vector3,r=new THREE.Vector3,e=new THREE.Vector3;return function(a,o,i,n,l){var c=n.normal,s=n.vertexNormals;if(i===THREE.FlatShading)a.copy(c);else if(i===THREE.SmoothShading){var E=l[n.a],h=l[n.b],m=l[n.c];e.crossVectors(t.subVectors(h,E),r.subVectors(m,E));var d=c.dot(e);e.crossVectors(t.subVectors(h,o),r.subVectors(m,o));var p=c.dot(e),R=p/d;e.crossVectors(t.subVectors(m,o),r.subVectors(E,o));var u=c.dot(e),v=u/d,y=1-R-v;t.copy(s[0]),t.multiplyScalar(R),r.copy(s[1]),r.multiplyScalar(v),e.copy(s[2]),e.multiplyScalar(y),a.addVectors(t,r),a.add(e)}}}(),x=function(){var n=64,c=document.createElement("canvas");c.width=n,c.height=n;var E=c.getContext("2d",{alpha:t.alpha===!0}),h=E.getImageData(0,0,n,n),R=h.data,u=new THREE.Color;return function(t,c){for(var E=0,v=0;n>v;v++)for(var M=0;n>M;M++,E+=4)m.copy(p),d.set(M+t-a,-(v+c-o),-i),d.applyMatrix3(y).normalize(),H(m,d,u,0),R[E]=255*Math.sqrt(u.r),R[E+1]=255*Math.sqrt(u.g),R[E+2]=255*Math.sqrt(u.b);return s.putImageData(h,t,c),t+=n,t>=r&&(t=0,c+=n,c>=e)?void l.dispatchEvent({type:"complete"}):(s.fillRect(t,c,n,n),void(f=requestAnimationFrame(function(){x(t,c)})))}}();this.render=function(t,r){this.autoClear===!0&&this.clear(),cancelAnimationFrame(f),t.autoUpdate===!0&&t.updateMatrixWorld(),void 0===r.parent&&r.updateMatrixWorld(),r.matrixWorldInverse.getInverse(r.matrixWorld),p.setFromMatrixPosition(r.matrixWorld),y.getNormalMatrix(r.matrixWorld),m.copy(p),i=.5/Math.tan(THREE.Math.degToRad(.5*r.fov))*e,n=t.children,M.length=0,t.traverse(function(t){t instanceof THREE.Light&&M.push(t),void 0===T[t.id]&&(T[t.id]={normalMatrix:new THREE.Matrix3,inverseMatrix:new THREE.Matrix4}),v.multiplyMatrices(r.matrixWorldInverse,t.matrixWorld);var e=T[t.id];e.normalMatrix.getNormalMatrix(v),e.inverseMatrix.getInverse(t.matrixWorld)}),x(0,0)}},THREE.EventDispatcher.prototype.apply(THREE.RaytracingRenderer.prototype);