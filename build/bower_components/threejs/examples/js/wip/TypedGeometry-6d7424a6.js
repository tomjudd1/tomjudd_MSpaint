THREE.TypedGeometry=function(t){THREE.BufferGeometry.call(this),void 0!==t&&this.setArrays(new Float32Array(3*t*3),new Float32Array(3*t*3),new Float32Array(3*t*2))},THREE.TypedGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.TypedGeometry.prototype.constructor=THREE.TypedGeometry,THREE.TypedGeometry.prototype.setArrays=function(t,r,e){return this.vertices=t,this.normals=r,this.uvs=e,this.addAttribute("position",new THREE.BufferAttribute(t,3)),this.addAttribute("normal",new THREE.BufferAttribute(r,3)),this.addAttribute("uv",new THREE.BufferAttribute(e,2)),this},THREE.TypedGeometry.prototype.merge=function(){var t=0,r=new THREE.Matrix3;return function(e,a,o){void 0!==o&&(t=o);var i=2*t,y=3*t,n=this.attributes.position.array,s=this.attributes.normal.array,u=this.attributes.uv.array;if(e instanceof THREE.TypedGeometry)for(var E=e.attributes.position.array,p=e.attributes.normal.array,T=e.attributes.uv.array,d=0,f=E.length;f>d;d+=3)n[d+y]=E[d],n[d+y+1]=E[d+1],n[d+y+2]=E[d+2],s[d+y]=p[d],s[d+y+1]=p[d+1],s[d+y+2]=p[d+2],u[d+i]=T[d],u[d+i+1]=T[d+1];else if(e instanceof THREE.IndexedTypedGeometry){for(var l=e.attributes.index.array,E=e.attributes.position.array,p=e.attributes.normal.array,T=e.attributes.uv.array,d=0,f=l.length;f>d;d++){var b=l[d],h=3*b,m=3*d;n[m+y]=E[h],n[m+y+1]=E[h+1],n[m+y+2]=E[h+2],s[m+y]=p[h],s[m+y+1]=p[h+1],s[m+y+2]=p[h+2];var v=2*b,c=2*d;u[c+i]=T[v],u[c+i+1]=T[v+1]}void 0!==a&&(a.applyToVector3Array(n,y,3*l.length),r.getNormalMatrix(a),r.applyToVector3Array(s,y,3*l.length)),t+=l.length}}}();