THREE.ConvexGeometry=function(e){function t(t){var o=e[t].clone(),c=o.length();o.x+=c*s(),o.y+=c*s(),o.z+=c*s();for(var h=[],i=0;i<a.length;){var v=a[i];if(r(v,o)){for(var f=0;3>f;f++){for(var u=[v[f],v[(f+1)%3]],E=!0,l=0;l<h.length;l++)if(n(h[l],u)){h[l]=h[h.length-1],h.pop(),E=!1;break}E&&h.push(u)}a[i]=a[a.length-1],a.pop()}else i++}for(var l=0;l<h.length;l++)a.push([h[l][0],h[l][1],t])}function r(t,r){var n=e[t[0]],s=e[t[1]],c=e[t[2]],a=o(n,s,c),h=a.dot(n);return a.dot(r)>=h}function o(e,t,r){var o=new THREE.Vector3,n=new THREE.Vector3;return o.subVectors(r,t),n.subVectors(e,t),o.cross(n),o.normalize(),o}function n(e,t){return e[0]===t[1]&&e[1]===t[0]}function s(){return 2*(Math.random()-.5)*1e-6}function c(e){var t=e.length();return new THREE.Vector2(e.x/t,e.y/t)}THREE.Geometry.call(this);for(var a=[[0,1,2],[0,2,1]],h=3;h<e.length;h++)t(h);for(var i=0,v=new Array(e.length),h=0;h<a.length;h++)for(var f=a[h],u=0;3>u;u++)void 0===v[f[u]]&&(v[f[u]]=i++,this.vertices.push(e[f[u]])),f[u]=v[f[u]];for(var h=0;h<a.length;h++)this.faces.push(new THREE.Face3(a[h][0],a[h][1],a[h][2]));for(var h=0;h<this.faces.length;h++){var f=this.faces[h];this.faceVertexUvs[0].push([c(this.vertices[f.a]),c(this.vertices[f.b]),c(this.vertices[f.c])])}this.computeFaceNormals(),this.computeVertexNormals()},THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ConvexGeometry.prototype.constructor=THREE.ConvexGeometry;